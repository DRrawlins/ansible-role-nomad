# This handles a number of idiosyncrasies with systemd so it can be
# run as the root process of the container, making it behave like a
# normal VM but without the overhead.

FROM centos:centos7
MAINTAINER  Phil Porada - pporada@greenlancer.com

# Setup container to run Systemd as root process, start an SSH
# daemon, and provision a user for test-kitchen to connect as.
RUN yum clean all && \
    yum -y swap — remove fakesystemd — install systemd systemd-libs && \

  # Remove unneeded unit files as this container isn't a proper machine
  (cd /lib/systemd/system/sysinit.target.wants/; for i in *; do [ $i == systemd-tmpfiles-setup.service ] || rm -f $i; done) && \
  rm -f /lib/systemd/system/multi-user.target.wants/* && \
  rm -f /etc/systemd/system/*.wants/* && \
  rm -f /lib/systemd/system/local-fs.target.wants/* && \
  rm -f /lib/systemd/system/sockets.target.wants/*udev* && \
  rm -f /lib/systemd/system/sockets.target.wants/*initctl* && \
  rm -f /lib/systemd/system/basic.target.wants/* && \
  rm -f /lib/systemd/system/anaconda.target.wants/* && \

  # Setup kitchen user with passwordless sudo
  useradd -d /home/kitchen -m -s /bin/bash kitchen && \
  mkdir -p /home/kitchen/.ssh && \
  chmod 700 /home/kitchen/.ssh && \
  chown kitchen:kitchen /home/kitchen/.ssh && \
  (echo kitchen:kitchen | chpasswd) && \
  mkdir -p /etc/sudoers.d && \
  echo 'kitchen ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers.d/kitchen && \

  # Setup SSH daemon so test-kitchen can access the container
  yum -y install openssh-server openssh-clients && \
  ssh-keygen -t dsa -f /etc/ssh/ssh_host_dsa_key -N '' && \
  ssh-keygen -t rsa -f /etc/ssh/ssh_host_rsa_key -N '' && \
  echo 'OPTIONS="-o UseDNS=no -o UsePAM=no -o PasswordAuthentication=yes"' >> /etc/sysconfig/sshd && \
  systemctl enable sshd.service

# Install basic system packages that we expect to exist by default.
# We do this in a separate RUN command since these packages are more
# likely to change over time, and we want to reuse previous layers as
# much as possible.
#
# This will create a fat image so that converge runs really only need to install Ansible
RUN yum install -y epel-release
RUN yum install -y python-pip  \
    python-devel \
    libffi  \
    libffi-devel  \
    openssl-devel  \
    gcc  \
    make  \
    PyYAML  \
    git  \
    python-httplib2  \
    python-jinja2  \
    python-keyczar  \
    python2-paramiko  \
    groff-base  \
    less  \
    libgnome-keyring  \
    libtomcrypt  \
    libtommath  \
    libyaml  \
    perl  \
    perl-Carp  \
    perl-Encode  \
    perl-Error  \
    perl-Exporter  \
    perl-File-Path  \
    perl-File-Temp  \
    perl-Filter  \
    perl-Getopt-Long  \
    perl-Git  \
    perl-HTTP-Tiny  \
    perl-PathTools  \
    perl-Pod-Escapes  \
    perl-Pod-Perldoc  \
    perl-Pod-Simple  \
    perl-Pod-Usage  \
    perl-Scalar-List-Utils  \
    perl-Socket  \
    perl-Storable  \
    perl-TermReadKey  \
    perl-Text-ParseWords  \
    perl-Time-HiRes  \
    perl-Time-Local  \
    perl-constant  \
    perl-libs  \
    perl-macros  \
    perl-parent  \
    perl-podlators  \
    perl-threads  \
    perl-threads-shared  \
    python-babel  \
    python-markupsafe  \
    python-pyasn1  \
    python-six  \
    python2-crypto  \
    python2-ecdsa  \
    rsync  \
    git  \
    python-httplib2  \
    python-jinja2  \
    python-keyczar  \
    python2-paramiko  \
    Installing  \
    groff-base  \
    less  \
    libgnome-keyring  \
    libtomcrypt  \
    libtommath  \
    libyaml  \
    perl  \
    perl-Carp  \
    perl-Encode  \
    perl-Error  \
    perl-Exporter  \
    perl-File-Path  \
    perl-File-Temp  \
    perl-Filter  \
    perl-Getopt-Long  \
    perl-Git  \
    perl-HTTP-Tiny  \
    perl-PathTools  \
    perl-Pod-Escapes  \
    perl-Pod-Perldoc  \
    perl-Pod-Simple  \
    perl-Pod-Usage  \
    perl-Scalar-List-Utils  \
    perl-Socket  \
    perl-Storable  \
    perl-TermReadKey  \
    perl-Text-ParseWords  \
    perl-Time-HiRes  \
    perl-Time-Local  \
    perl-constant  \
    perl-libs  \
    perl-macros  \
    perl-parent  \
    perl-podlators  \
    perl-threads  \
    perl-threads-shared  \
    python-babel  \
    python-markupsafe  \
    python-pyasn1  \
    python-six  \
    python2-crypto  \
    python2-ecdsa  \
    rsync  \
    sshpass  \
    MySQL-python  \
    python-devel  \
    python  \
    python-libs  \
    crontabs  \
    initscripts  \
    net-tools  \
    passwd  \
    sudo \
    tar \
    which \
    wget \
    mercurial \
    libselinux-python

RUN yum groupinstall -y "Development tools"
RUN (curl -L https://www.opscode.com/chef/install.sh | bash -s — -v 12.0.3)
